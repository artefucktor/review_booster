import json
import streamlit as st
import pandas as pd

st.header('–†–µ–≤—å—é –∑–∞ 5 –º–∏–Ω—É—Ç')
st.markdown('''*–ù–∞ —á—Ç–æ –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–∏ –±–µ–≥–ª–æ–π –æ—Ü–µ–Ω–∫–µ —Ä–∞–±–æ—Ç—ã*

    - –∫–∞–∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω—ã –æ–ø–∏—Å–∞–Ω–∏—è, —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞, –µ—Å—Ç—å –ª–∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    - –ø—Ä–æ–≤–µ–¥–µ–Ω –ª–∏ EDA, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ç—â–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞, –µ—Å—Ç—å –ª–∏ —Ñ–∏—á–µ–∏–Ω–∂–∏–Ω–∏—Ä–∏–Ω–≥
    - –∫–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞, —Å—Ç–∏–ª—å, —á–∏—Ç–∞–µ–º–æ—Å—Ç—å, –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—Ç–∏–≤–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
    - –∫–∞–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è (–Ω–∞–ø—Ä–∏–º–µ—Ä –ø–∞–π–ø–ª–∞–π–Ω—ã)
    - –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ –ª–∏ —Ü–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞
''')

st.markdown("""
<style>
    div[role="radiogroup"] > :first-child{display: none !important;}
</style>
""", unsafe_allow_html=True)

def read_template(template):
    df = pd.read_csv(template)
    schema = list()
    start_items, num_items = 4, df.shape[1]
    for section in df.section.unique():
        groups = list()
        for row in df[df.section==section].itertuples(index=False):
            option_group = {}
            option_group['group_name'] = row.group_name
            option_group['group_weight'] = row.group_weight
            option_group['items'] = [row[col] for col in range(start_items, num_items) 
                                     if type(row[col])==str]
            groups.append(option_group)
        schema.append({'title': section,
                       'option_group': groups})
    return schema

def clear_form():
    run_id = st.session_state.run_id
    st.write(run_id)
    st.session_state.clear()
    st.session_state.run_id = run_id+1

if 'run_id' not in st.session_state:
    st.session_state.run_id = 0


# user interface
schema = read_template(st.file_uploader('–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å–≤–æ–π —à–∞–±–ª–æ–Ω', type='csv') or 'template.csv')
with st.form("my_form", clear_on_submit=False):
    rate = 0
    for i in range(len(schema)):
        section = schema[i]
        st.subheader(section['title'].upper())
        group = section['option_group']
        for k in range(len(group)):
            option = group[k]
            st.radio(option['group_name'],
                     ['',] + option['items'],
                     key='section'+str(i)+'_group'+str(k)+'run_'+str(st.session_state.run_id)
                     )
    submit = st.form_submit_button('–ò–¢–û–ì–û', use_container_width=True)

st.subheader('SUMMARY')

summary = '\n\n'.join(v for k,v in sorted(st.session_state.items())
                       if k.startswith('section') and len(v)>0) + ' ü§ì'
st.write(summary)
st.write('---')
st.write('*–ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ ‚Äì –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å —Ä–µ–≤—å—é –Ω–∞–ø–∏–ª—å–Ω–∏–∫–æ–º*')

st.button('–û–ß–ò–°–¢–ò–¢–¨ –§–û–†–ú–£', on_click=clear_form, use_container_width=True)

